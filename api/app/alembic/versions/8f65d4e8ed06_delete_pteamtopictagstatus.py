"""delete-pteamtopictagstatus

Revision ID: 8f65d4e8ed06
Revises: f897d415d921
Create Date: 2024-06-19 00:08:41.086166

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8f65d4e8ed06'
down_revision = 'f897d415d921'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_currentpteamtopictagstatus_pteam_id', table_name='currentpteamtopictagstatus')
    op.drop_index('ix_currentpteamtopictagstatus_status_id', table_name='currentpteamtopictagstatus')
    op.drop_index('ix_currentpteamtopictagstatus_tag_id', table_name='currentpteamtopictagstatus')
    op.drop_index('ix_currentpteamtopictagstatus_topic_id', table_name='currentpteamtopictagstatus')
    op.drop_table('currentpteamtopictagstatus')
    op.drop_index('ix_pteamtopictagstatus_pteam_id', table_name='pteamtopictagstatus')
    op.drop_index('ix_pteamtopictagstatus_tag_id', table_name='pteamtopictagstatus')
    op.drop_index('ix_pteamtopictagstatus_topic_id', table_name='pteamtopictagstatus')
    op.drop_index('ix_pteamtopictagstatus_user_id', table_name='pteamtopictagstatus')
    op.drop_table('pteamtopictagstatus')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pteamtopictagstatus',
    sa.Column('status_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('pteam_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('logging_ids', postgresql.ARRAY(sa.VARCHAR(length=36)), autoincrement=False, nullable=False),
    sa.Column('assignees', postgresql.ARRAY(sa.VARCHAR(length=36)), autoincrement=False, nullable=False),
    sa.Column('scheduled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['pteam_id'], ['pteam.pteam_id'], name='pteamtopictagstatus_pteam_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], name='pteamtopictagstatus_tag_id_fkey'),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.topic_id'], name='pteamtopictagstatus_topic_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['account.user_id'], name='pteamtopictagstatus_user_id_fkey'),
    sa.PrimaryKeyConstraint('status_id', name='pteamtopictagstatus_pkey')
    )
    op.add_column('pteamtopictagstatus', sa.Column('topic_status', type_=sa.Enum(name='topicstatustype'), autoincrement=False, nullable=False))
    op.create_index('ix_pteamtopictagstatus_user_id', 'pteamtopictagstatus', ['user_id'], unique=False)
    op.create_index('ix_pteamtopictagstatus_topic_id', 'pteamtopictagstatus', ['topic_id'], unique=False)
    op.create_index('ix_pteamtopictagstatus_tag_id', 'pteamtopictagstatus', ['tag_id'], unique=False)
    op.create_index('ix_pteamtopictagstatus_pteam_id', 'pteamtopictagstatus', ['pteam_id'], unique=False)
    
    op.create_table('currentpteamtopictagstatus',
    sa.Column('pteam_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('topic_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('status_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('threat_impact', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pteam_id'], ['pteam.pteam_id'], name='currentpteamtopictagstatus_pteam_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['pteamtopictagstatus.status_id'], name='currentpteamtopictagstatus_status_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], name='currentpteamtopictagstatus_tag_id_fkey'),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.topic_id'], name='currentpteamtopictagstatus_topic_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pteam_id', 'topic_id', 'tag_id', name='currentpteamtopictagstatus_pkey')
    )
    op.add_column('currentpteamtopictagstatus', sa.Column('topic_status', type_=sa.Enum(name='topicstatustype'), autoincrement=False, nullable=True))
    op.create_index('ix_currentpteamtopictagstatus_topic_id', 'currentpteamtopictagstatus', ['topic_id'], unique=False)
    op.create_index('ix_currentpteamtopictagstatus_tag_id', 'currentpteamtopictagstatus', ['tag_id'], unique=False)
    op.create_index('ix_currentpteamtopictagstatus_status_id', 'currentpteamtopictagstatus', ['status_id'], unique=False)
    op.create_index('ix_currentpteamtopictagstatus_pteam_id', 'currentpteamtopictagstatus', ['pteam_id'], unique=False)
    # ### end Alembic commands ###
